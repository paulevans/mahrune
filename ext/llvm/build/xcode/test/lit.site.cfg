import sys

## Autogenerated by LLVM/Clang configuration.
# Do not edit!
config.host_triple = "x86_64-apple-darwin14.5.0"
config.target_triple = "x86_64-apple-darwin14.5.0"
config.llvm_src_root = "/Users/paul/Code/github/paulevans/mahrune/ext/llvm"
config.llvm_obj_root = "/Users/paul/Code/github/paulevans/mahrune/ext/llvm/build/xcode"
config.llvm_tools_dir = "/Users/paul/Code/github/paulevans/mahrune/ext/llvm/build/xcode/%(build_mode)s/bin"
config.llvm_lib_dir = "/Users/paul/Code/github/paulevans/mahrune/ext/llvm/build/xcode/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)/lib"
config.llvm_shlib_dir = "/Users/paul/Code/github/paulevans/mahrune/ext/llvm/build/xcode/%(build_mode)s/lib"
config.llvm_shlib_ext = ".dylib"
config.llvm_exe_ext = ""
config.lit_tools_dir = ""
config.python_executable = "/usr/local/bin/python2.7"
config.gold_executable = "/usr/bin/ld"
config.ld64_executable = "/usr/bin/ld"
config.ocamlfind_executable = "OCAMLFIND-NOTFOUND"
config.have_ocamlopt = ""
config.have_ocaml_ounit = ""
config.ocaml_flags = ""
config.include_go_tests = "ON"
config.go_executable = "/usr/local/bin/go"
config.enable_shared = 1
config.enable_assertions = 1
config.targets_to_build = " AArch64 AMDGPU ARM BPF CppBackend Hexagon Mips MSP430 NVPTX PowerPC Sparc SystemZ X86 XCore"
config.native_target = "X86"
config.llvm_bindings = " go".split(' ')
config.host_os = "Darwin"
config.host_arch = "x86_64"
config.host_cc = "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang "
config.host_cxx = "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ "
config.host_ldflags = ""
config.llvm_use_intel_jitevents = "OFF"
config.llvm_use_sanitizer = ""
config.have_zlib = "1"
config.have_dia_sdk = 0
config.enable_ffi = "OFF"
config.test_examples = ""

# Support substitution of the tools_dir with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
    config.llvm_shlib_dir = config.llvm_shlib_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

# Let the main config do the real work.
lit_config.load_config(config, "/Users/paul/Code/github/paulevans/mahrune/ext/llvm/test/lit.cfg")
